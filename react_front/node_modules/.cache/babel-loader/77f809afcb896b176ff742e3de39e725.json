{"ast":null,"code":"export var create = function create(userId, token, post) {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/post/new/\").concat(userId), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: post\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}; // export const list = () => {\n//     return fetch(`${process.env.REACT_APP_API_URL}/posts`, {\n//         method: \"GET\"\n//     })\n//         .then(response => {\n//             return response.json();\n//         })\n//         .catch(err => console.log(err));\n// };\n// with pagination\n\nexport var list = function list(page) {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/posts/?page=\").concat(page), {\n    method: \"GET\"\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\nexport var singlePost = function singlePost(postId) {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/post/\").concat(postId), {\n    method: \"GET\"\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\nexport var listByUser = function listByUser(userId, token) {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/posts/by/\").concat(userId), {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\nexport var remove = function remove(postId, token) {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/post/\").concat(postId), {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\nexport var update = function update(postId, token, post) {\n  console.log(postId, token, post);\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/post/\").concat(postId), {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: post\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\nexport var like = function like(userId, token, postId) {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/post/like\"), {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify({\n      userId: userId,\n      postId: postId\n    })\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\nexport var unlike = function unlike(userId, token, postId) {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/post/unlike\"), {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify({\n      userId: userId,\n      postId: postId\n    })\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\nexport var comment = function comment(userId, token, postId, _comment) {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/post/comment\"), {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify({\n      userId: userId,\n      postId: postId,\n      comment: _comment\n    })\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\nexport var uncomment = function uncomment(userId, token, postId, comment) {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/post/uncomment\"), {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify({\n      userId: userId,\n      postId: postId,\n      comment: comment\n    })\n  }).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["/Users/feli-v/Desktop/socialMedia/react_front/src/post/apiPost.js"],"names":["create","userId","token","post","fetch","process","env","REACT_APP_API_URL","method","headers","Accept","Authorization","body","then","response","json","catch","err","console","log","list","page","singlePost","postId","listByUser","remove","update","like","JSON","stringify","unlike","comment","uncomment"],"mappings":"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","sourcesContent":["export const create = (userId, token, post) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/post/new/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: post\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n// export const list = () => {\n//     return fetch(`${process.env.REACT_APP_API_URL}/posts`, {\n//         method: \"GET\"\n//     })\n//         .then(response => {\n//             return response.json();\n//         })\n//         .catch(err => console.log(err));\n// };\n\n// with pagination\nexport const list = page => {\n    return fetch(`${process.env.REACT_APP_API_URL}/posts/?page=${page}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const singlePost = postId => {\n    return fetch(`${process.env.REACT_APP_API_URL}/post/${postId}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const listByUser = (userId, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/posts/by/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const remove = (postId, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/post/${postId}`, {\n        method: \"DELETE\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const update = (postId, token, post) => {\n    console.log(postId, token, post);\n    return fetch(`${process.env.REACT_APP_API_URL}/post/${postId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: post\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const like = (userId, token, postId) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/post/like`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ userId, postId })\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const unlike = (userId, token, postId) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/post/unlike`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ userId, postId })\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const comment = (userId, token, postId, comment) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/post/comment`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ userId, postId, comment })\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const uncomment = (userId, token, postId, comment) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/post/uncomment`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ userId, postId, comment })\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\n"]},"metadata":{},"sourceType":"module"}