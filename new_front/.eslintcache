[{"/Users/feli-v/Desktop/socialMedia/new_front/src/index.js":"1","/Users/feli-v/Desktop/socialMedia/new_front/src/App.js":"2","/Users/feli-v/Desktop/socialMedia/new_front/src/MainRouter.js":"3","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/ProfileComponent.js":"4","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/NewPostComponent.js":"5","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/EccChat.js":"6","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/UsersComponent.js":"7","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/NoEccChat.js":"8","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/MenuTab.js":"9","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/PostsComponent.js":"10","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/FriendsComponent.js":"11","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/RegisterComponent.js":"12","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/History.js":"13","/Users/feli-v/Desktop/socialMedia/new_front/src/helper/posts.js":"14","/Users/feli-v/Desktop/socialMedia/new_front/src/helper/socket.js":"15","/Users/feli-v/Desktop/socialMedia/new_front/src/helper/user.js":"16","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/MenuComponent.js":"17","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/SinglePostComponent.js":"18","/Users/feli-v/Desktop/socialMedia/new_front/src/helper/friends.js":"19","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/LoginComponent.js":"20","/Users/feli-v/Desktop/socialMedia/new_front/src/helper/interest.js":"21","/Users/feli-v/Desktop/socialMedia/new_front/src/helper/index.js":"22"},{"size":411,"mtime":1612159380681,"results":"23","hashOfConfig":"24"},{"size":255,"mtime":1612159380674,"results":"25","hashOfConfig":"24"},{"size":1307,"mtime":1619925955949,"results":"26","hashOfConfig":"24"},{"size":2958,"mtime":1616487396953,"results":"27","hashOfConfig":"24"},{"size":3851,"mtime":1615097944510,"results":"28","hashOfConfig":"24"},{"size":4453,"mtime":1616487039256,"results":"29","hashOfConfig":"24"},{"size":1866,"mtime":1616487039244,"results":"30","hashOfConfig":"24"},{"size":4179,"mtime":1617087392154,"results":"31","hashOfConfig":"24"},{"size":451,"mtime":1619925955954,"results":"32","hashOfConfig":"24"},{"size":812,"mtime":1619925955954,"results":"33","hashOfConfig":"24"},{"size":6768,"mtime":1619925955951,"results":"34","hashOfConfig":"24"},{"size":1425,"mtime":1619925955955,"results":"35","hashOfConfig":"24"},{"size":87,"mtime":1612159380681,"results":"36","hashOfConfig":"24"},{"size":2545,"mtime":1616487039240,"results":"37","hashOfConfig":"24"},{"size":3627,"mtime":1614927061572,"results":"38","hashOfConfig":"24"},{"size":1728,"mtime":1616487396952,"results":"39","hashOfConfig":"24"},{"size":2264,"mtime":1616487039242,"results":"40","hashOfConfig":"24"},{"size":3325,"mtime":1619925955955,"results":"41","hashOfConfig":"24"},{"size":460,"mtime":1617126932622,"results":"42","hashOfConfig":"24"},{"size":3713,"mtime":1619925955952,"results":"43","hashOfConfig":"24"},{"size":2320,"mtime":1619925955950,"results":"44","hashOfConfig":"24"},{"size":1645,"mtime":1616487039239,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"y6oa6s",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/feli-v/Desktop/socialMedia/new_front/src/index.js",[],["103","104"],"/Users/feli-v/Desktop/socialMedia/new_front/src/App.js",[],"/Users/feli-v/Desktop/socialMedia/new_front/src/MainRouter.js",[],"/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/ProfileComponent.js",["105","106","107"],"import React from 'react';\nimport { isAuthenticated, signout } from \"../helper\";\nimport {withRouter } from 'react-router-dom';\nimport { read } from '../helper/user';\nimport DefaultProfile from \"../images/avatar.jpg\";\nimport { Card, Button, Descriptions, Tag, Avatar, Col, Row} from 'antd';\nimport history from './History';\nimport {list} from '../helper/posts';\nimport _ from 'lodash';\nimport SinglePostComponent from './SinglePostComponent';\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\n\nconst { Meta } = Card;\nclass ProfileComponent extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n          user: {followers: []},\n          myPost:[]\n        };\n    }\n    \n    componentDidMount() {\n      const userId = this.props.match.params.userId;\n      const token = isAuthenticated().token;\n      list(1).then(data => {\n        if (data.error) {\n            console.log(data.error);\n        } else {\n            const temp = _.filter(data, (d) => {return d.postedBy._id === userId})\n            this.setState({myPost : temp})\n        }\n      });\n      read(userId, token).then(data => {\n        if (data.error) {\n          console.log(\"data.error: \", data.error);\n        } else {\n          this.setState({ user: data});\n        }\n      }); \n    }\n\n    returnToHome = () => {\n      history.push('/');  \n    }\n\n    render(){\n        const {user, myPost} = this.state;\n        return (\n          <div style={{marginLeft:40, marginTop:30}}>\n            <Button type=\"primary\" style={{marginLeft:40, backgroundColor:\"GrayText\"}} onClick={()=>signout(this.returnToHome)}>Sign out</Button>\n            <Card title={user.name} bordered={false} style={{ width: 1000 }}>\n            \n              <Descriptions size=\"small\" column={3}>\n                <Descriptions.Item label=\"Email\">{user.email}</Descriptions.Item>\n                <Descriptions.Item label=\"Create Time\">{new Date(user.created).toDateString()}</Descriptions.Item>\n              </Descriptions>\n              <Descriptions size=\"small\" column={10}>\n                <Descriptions.Item label=\"Followers\">{_.map(user.followers,(key)=><Tag color=\"purple\">{key.name}</Tag>)}</Descriptions.Item>\n              </Descriptions>\n            </Card>\n            <Row style={{marginTop:30}}>\n              {_.map(myPost,(post)=> (\n                <Col span={5} offset={1}>\n                  <Card\n                    style={{ width: 250 }}\n                    cover={<img src={`${process.env.REACT_APP_API_URL}/post/photo/${post._id}`} alt={post.title} />}\n                    actions={[<SettingOutlined key=\"setting\" />, <EditOutlined key=\"edit\" />, <EllipsisOutlined key=\"ellipsis\" />,]}>\n                    <Meta title={post.title} description={post.body}/>\n                  </Card>\n                </Col>\n              ))}\n            </Row>\n          </div>\n            \n        )\n    }\n}\n\nexport default withRouter(ProfileComponent);","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/NewPostComponent.js",[],"/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/EccChat.js",["108"],"import React, { Component } from \"react\";\nimport socket,{ws} from '../helper/socket';\nimport ecc from 'eccjs';\nimport {Button} from 'antd';\nconst keys = ecc.generate(ecc.ENC_DEC);\n\nexport default class index extends Component {\n    state = {\n        content:'',\n    }\n    componentDidMount(){\n        socket.initSocket()\n        ws.onmessage=(msg)=>{\n            let msgdata = JSON.parse(msg.data)\n            let msgObj = JSON.parse(ecc.decrypt(msgdata.key, msgdata.info));\n            let userInfo = localStorage.jwt?JSON.parse(localStorage.jwt):{user:{_id:''}}\n            if(!userInfo.user._id||!msgObj.msg) return false\n            const chatBody =document.getElementById('chatBody')\n            if(msgObj._id==userInfo.user._id){\n                const self = document.createElement('div')\n                const selfMsg = document.createElement('div')\n                const selfImg = document.createElement('div')\n                const selfContent=document.createElement('div')\n                const selfName = document.createElement('p')\n                selfName.className=\"chat_name\"\n                selfName.innerHTML=msgObj.name||'guest'\n                self.className=\"chat_self\"\n                selfMsg.className=\"chat_msg\"\n                selfMsg.innerHTML = msgObj.msg\n                selfImg.className=\"chat_img\";\n                selfImg.innerHTML = `<img src=\"https://ss2.bdstatic.com/70cFvnSh_Q1YnxGkpoWK1HF6hhy/it/u=1235408669,1544530317&fm=26&gp=0.jpg\"/>`\n                selfContent.appendChild(selfName)\n                selfContent.appendChild(selfMsg)\n                self.appendChild(selfContent)\n                self.appendChild(selfImg)\n                chatBody.appendChild(self)\n            }else{\n                const other = document.createElement('div')\n                const otherMsg = document.createElement('div')\n                const otherImg = document.createElement('div')\n                const otherContent=document.createElement('div')\n                const otherName = document.createElement('p')\n                otherName.className=\"chat_name\"\n                otherName.innerHTML=msgObj.name||'tourist'\n                other.className=\"chat_other\"\n                otherMsg.className=\"chat_msg\"\n                otherMsg.innerHTML = msgObj.msg\n                otherImg.className=\"chat_img\";\n                otherImg.innerHTML = `<img src=\"https://dss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1007923841,2418143080&fm=26&gp=0.jpg\"/>`\n                other.appendChild(otherImg)\n                otherContent.appendChild(otherName)\n                otherContent.appendChild(otherMsg)\n                other.appendChild(otherContent)\n                chatBody.appendChild(other)\n            }\n            console.info(\"****** decrypt key \" + msgdata.key + \"******\")\n        }\n    }\n    send = ()=>{\n        const {content} = this.state;\n        if(!content){return false}\n        let userInfo = localStorage.jwt?JSON.parse(localStorage.jwt):null\n        let userObj = userInfo?{\n            _id:userInfo.user._id,\n            name:userInfo.user.name,\n            msg:content\n        }:{\n            msg:content\n        }\n        const sendMsg = {\n            info:ecc.encrypt(keys.enc,JSON.stringify(userObj)),\n            key:keys.dec\n        }\n        socket.send(JSON.stringify(sendMsg))\n        this.setState({content:''})\n        console.info(\"****** encrypt key \" + keys.enc + \"******\")\n    }\n    clear = ()=>{this.setState({content:''})}\n    render() {\n        return (\n            <div className=\"flexBox\">\n                <div className=\"chatBox\">\n                    <div className=\"chatHead\"><p>EccChat</p></div>\n                    <div className=\"chatBody\" id=\"chatBody\">\n                    </div>\n                    <div className=\"chatFooter\">\n                        <textarea rows={5} style={{resize:'none'}} value={this.state.content} onChange={(e)=>{\n                            this.setState({content:e.target.value.trim()})\n                        }} />\n                        <div className=\"chat_bt\">\n                            <Button className=\"btn btn-raised btn-info chat_btchild\" onClick={()=>this.clear()}>clear</Button>\n                            <Button type=\"primary\" className=\"btn btn-raised btn-primary chat_btchild\" onClick={()=>this.send()}>send</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/UsersComponent.js",["109","110"],"import React from 'react';\nimport { list } from '../helper/user';\nimport { Table, Tag, Space } from 'antd';\n\nclass UsersComponent extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            users: []\n        };\n    }\n\n    componentDidMount() {\n        list().then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                this.setState({ users: data });\n            }\n        });\n    }\n    columns = [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          width:'200px',\n          render: text => <a>{text}</a>,\n        },\n        {\n          title: 'Start Date',\n          dataIndex: 'created',\n          key: 'created',\n          width:'300px',\n          render: text => <Space>{new Date(text).toDateString()}</Space>\n        },\n        {\n          title: 'Email',\n          dataIndex: 'email',\n          key: 'email',\n          width:'300px',\n        },\n        /*{\n          title: 'Follower',\n          key: 'followers',\n          dataIndex: 'followers',\n          width:'300px',\n          sorter: (a, b) => a.followers.length - b.followers.length,\n          render: followers => <Space>{followers.length}</Space> \n        },\n        {\n            title: 'Following',\n            key: 'following',\n            dataIndex: 'following',\n            width:'300px',\n            sorter: (a, b) => a.followers.length - b.followers.length,\n            render: followers => <Space>{followers.length}</Space> \n          },*/\n      ];\n\n    render(){\n        const {users} = this.state;\n        return (\n            <div style={{marginLeft:80, marginTop:50}}>\n                {console.log(users)}\n                <Table columns={this.columns} dataSource={users}/>\n            </div>\n        )\n    }\n}\n\nexport default UsersComponent;","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/NoEccChat.js",["111"],"import React, { Component } from \"react\";\nimport socket,{ws} from '../helper/socket';\nimport {Button} from 'antd';\n\n\nexport default class index extends Component {\n    state = {\n        content:'',\n    }\n    componentDidMount(){\n        socket.initSocket()\n        ws.onmessage=(msg)=>{\n            let msgdata = JSON.parse(msg.data)\n            let msgObj = JSON.parse(msgdata.info);\n            let userInfo = localStorage.jwt?JSON.parse(localStorage.jwt):{user:{_id:''}}\n            if(!userInfo.user._id||!msgObj.msg) return false\n            const chatBody =document.getElementById('chatBody')\n            if(msgObj._id==userInfo.user._id){\n                const self = document.createElement('div')\n                const selfMsg = document.createElement('div')\n                const selfImg = document.createElement('div')\n                const selfContent=document.createElement('div')\n                const selfName = document.createElement('p')\n                selfName.className=\"chat_name\"\n                selfName.innerHTML=msgObj.name||'guest'\n                self.className=\"chat_self\"\n                selfMsg.className=\"chat_msg\"\n                selfMsg.innerHTML = msgObj.msg\n                selfImg.className=\"chat_img\";\n                selfImg.innerHTML = `<img src=\"https://ss2.bdstatic.com/70cFvnSh_Q1YnxGkpoWK1HF6hhy/it/u=1235408669,1544530317&fm=26&gp=0.jpg\"/>`\n                selfContent.appendChild(selfName)\n                selfContent.appendChild(selfMsg)\n                self.appendChild(selfContent)\n                self.appendChild(selfImg)\n                chatBody.appendChild(self)\n            }else{\n                const other = document.createElement('div')\n                const otherMsg = document.createElement('div')\n                const otherImg = document.createElement('div')\n                const otherContent=document.createElement('div')\n                const otherName = document.createElement('p')\n                otherName.className=\"chat_name\"\n                otherName.innerHTML=msgObj.name||'tourist'\n                other.className=\"chat_other\"\n                otherMsg.className=\"chat_msg\"\n                otherMsg.innerHTML = msgObj.msg\n                otherImg.className=\"chat_img\";\n                otherImg.innerHTML = `<img src=\"https://dss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1007923841,2418143080&fm=26&gp=0.jpg\"/>`\n                other.appendChild(otherImg)\n                otherContent.appendChild(otherName)\n                otherContent.appendChild(otherMsg)\n                other.appendChild(otherContent)\n                chatBody.appendChild(other)\n            }\n        }\n    }\n    send = ()=>{\n        const {content} = this.state;\n        if(!content){return false}\n        let userInfo = localStorage.jwt?JSON.parse(localStorage.jwt):null\n        let userObj = userInfo?{\n            _id:userInfo.user._id,\n            name:userInfo.user.name,\n            msg:content\n        }:{\n            msg:content\n        }\n        const sendMsg = {\n            info:JSON.stringify(userObj),\n        }\n        socket.send(JSON.stringify(sendMsg))\n        this.setState({content:''})\n    }\n    clear = ()=>{this.setState({content:''})}\n    render() {\n        return (\n            <div className=\"flexBox\">\n                <div className=\"chatBox\">\n                    <div className=\"chatHead\"><p>NoEccChat</p></div>\n                    <div className=\"chatBody\" id=\"chatBody\">\n                    </div>\n                    <div className=\"chatFooter\">\n                        <textarea rows={5} style={{resize:'none'}} value={this.state.content} onChange={(e)=>{\n                            this.setState({content:e.target.value.trim()})\n                        }} />\n                        <div className=\"chat_bt\">\n                            <Button className=\"btn btn-raised btn-info chat_btchild\" onClick={()=>this.clear()}>clear</Button>\n                            <Button type=\"primary\" className=\"btn btn-raised btn-primary chat_btchild\" onClick={()=>this.send()}>send</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/MenuTab.js",["112","113","114"],"import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { signout, isAuthenticated } from '../helper';\nimport LoginComponent from './LoginComponent';\nimport MenuComponent from './MenuComponent';\n\nclass MenuTab extends React.Component {\n    render() {\n        return (\n            <div>\n                {isAuthenticated() ? <MenuComponent/>:<LoginComponent/>}\n            </div>\n        )\n    }\n}\n\nexport default MenuTab;","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/PostsComponent.js",["115","116","117"],"import React, {createElement} from 'react';\nimport SinglePostComponent from './SinglePostComponent';\nimport { Pagination, Col, Row} from 'antd';\nimport {list} from '../helper/posts';\n\nclass PostsComponent extends React.Component {\n    constructor() {\n        super();\n        this.state={\n            posts: [],\n        }\n    }\n    componentDidMount() {\n        list(1).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                this.setState({ posts: data });\n            }\n        });\n    }\n    render(){\n        return (\n            <div style={{marginLeft:50, marginTop:30}}>\n                {this.state.posts.map((post)=>(<Row><SinglePostComponent post={post}/></Row>))}\n            </div>    \n        )\n    }\n}\n\nexport default PostsComponent;","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/FriendsComponent.js",["118","119","120","121","122"],"import React from 'react';\nimport { isAuthenticated, signout } from \"../helper\";\nimport {withRouter } from 'react-router-dom';\nimport { read, follow, unfollow} from '../helper/user';\nimport DefaultProfile from \"../images/avatar.jpg\";\nimport { listByUser } from '../helper/posts';\nimport { Button, Checkbox,Row, Col, Tag} from 'antd';\nimport history from './History';\nimport { recommendfriend} from '../helper/friends';\nimport { getAllInterests, readInterests, assignInterest, unassignInterest } from '../helper/interest';\n\n\nclass FriendsComponent extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n          user: { following: [], followers: [] },\n          redirectToSignin: false,\n          following: false,\n          interests: [],\n          allInterests: [],\n          changedInterests: [],\n          selectedInterests: [],\n          error: \"\",\n          posts: [],\n          recommendfriend: \"\",\n          newInterest : \"\",\n          open : false\n        };\n    }\n\n      init = userId => {\n        const token = isAuthenticated().token;\n        read(userId, token).then(data => {\n          if (data.error) {\n            this.setState({ redirectToSignin: true });\n          } else {\n            this.setState({ user: data});\n            console.log(\"data >>>\" , data);\n          }\n        });\n\n        readInterests(userId).then(data => {\n            if (data.error) {\n              this.setState({ redirectToSignin: true });\n            } else {\n                this.setState({interests: data});\n            }\n          });\n        \n        recommendfriend(userId, token).then(data => {\n            if (data.error) {\n              console.log(data.error);\n            } else {\n              if (data.jindex > 0.2) {\n                this.setState({recommendfriend: data});\n              } else {\n                console.log(\"No friends for recommendation\");\n              }\n          }\n        } )\n\n        getAllInterests().then(data => {\n          if (data.error) {\n            console.log(data.error);\n          } else {\n            this.setState({allInterests: data});\n          }\n        } )\n      };\n    \n\n    assignInterests = () => {\n      const jwt = isAuthenticated();\n      const token = jwt.token;\n      const userId = jwt.user._id;\n      const userInterests = this.state.selectedInterests;\n      console.log(\"userInterests >>> \", userInterests);\n      console.log(\"userId >>> \", userId);\n       \n      assignInterest(userId, token, userInterests).then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          this.setState({interests: userInterests});\n        }\n        window.location.reload();\n      })\n    };\n\n    unassignInterests = (interestId) => {\n      const jwt = isAuthenticated();\n      const token = jwt.token;\n      const userId = jwt.user._id;\n      \n      console.log(\"interestId >>>\", interestId);\n      unassignInterest(userId, token, interestId).then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n            console.log(\"unassigned called\");\n        }\n        window.location.reload();\n      })\n    };\n\n\n    followThis = (followId, followName) => {\n      const jwt = isAuthenticated();\n      const token = jwt.token;\n      const userId = jwt.user._id;\n\n      follow(userId, token, followId).then(data => {\n        if (data.error) {\n            this.setState({ error: data.error });\n        } else {\n            this.setState({\n                open: true,\n                msg: `Following ${followName}`\n            });\n        }\n        window.location.reload();\n      });\n    };\n\n\n    unfollowThis = (unfollowId, unfollowName) => {\n      const jwt = isAuthenticated();\n      const token = jwt.token;\n      const userId = jwt.user._id;\n\n      unfollow(userId, token, unfollowId).then(data => {\n        if (data.error) {\n            this.setState({ error: data.error });\n        } else {\n            this.setState({\n                open: true,\n                msg: `Unfollowing ${unfollowName}`\n            });\n        }\n        window.location.reload();\n      });\n    };\n\n\n    onChange = e => {\n      this.setState({selectedInterests : e})\n    };\n\n    handleChange = (event) => {\n      this.setState({newInterest : event.target.value});\n    }\n\n    componentDidMount() {\n      const userId = isAuthenticated().user._id;\n      this.init(userId);\n    }\n    \n    componentWillReceiveProps(props) {\n      const userId = isAuthenticated().user._id;\n      this.init(userId);\n    }\n    \n    render(){\n        // const interests = this.state.user.interests;\n        const {user, interests, recommendfriend, allInterests, open, msg} = this.state;     \n\n        // const interests = user.interests;   \n        return (\n            <div style={{ marginLeft:40, marginTop:20}}  vertical layout>\n              <div> \n                <h3>Interests list</h3>\n                <Row>\n                  {Object.keys(interests).length > 0?                 \n                  interests.map((value) => (        \n                      <Tag style = {{marginLeft: 30}} closable onClose={() => this.unassignInterests(value._id)}>\n                        {value.title}\n                      </Tag>\n                  )): null }   \n                </Row>\n                \n              </div>\n\n            <div style={{ marginTop:20}} > \n              <h3>Following friends, click to unfollow</h3>\n              <Row>\n              {Object.keys(user.following).length > 0? \n                user.following.map((value, index) => (\n                <Tag style={{marginLeft:30}} onClick={() => this.unfollowThis(value._id, value.name)} color=\"success\">{value.name}</Tag>\n                )): null }\n              </Row>\n            </div>\n            \n            <div style={{  marginTop:20}} > \n              <h3>Recommend Friends, click to follow</h3>\n               {Object.keys(recommendfriend).length > 1?   \n                  <Tag style={{marginLeft:30}} color=\"processing\" onClick={() => this.followThis(recommendfriend.userId, recommendfriend.name)} >{recommendfriend.name}</Tag>\n                : <ul> No recommendation </ul>} \n            </div>\n\n            <div style={{marginTop:30}}>\n              <h3>Update Your Interests</h3>\n               <Checkbox.Group style={{width: \"500px\"}} options={allInterests.map(column => ({label:column.title, value: column._id}))}  onChange={this.onChange}/>\n\n            </div>\n\n            <Button  onClick={this.assignInterests} className=\"btn update interests\">\n                Add\n            </Button>\n\n\n            {open && (\n                    <div className=\"alert alert-success\">{msg}</div>\n                )}\n          </div>\n        )\n    }\n}\n\nexport default withRouter(FriendsComponent);","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/RegisterComponent.js",["123","124"],"import React from 'react';\nimport { Form, Input, Button, Checkbox} from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport {register} from '../helper'\nimport './style.css';\n\nclass LoginComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email:\"\",\n            password:\"\"\n        }\n    }\n    onFinish = (values) => {\n        this.setState({\n            email: values.email,\n            password: values.password\n        })\n    };\n    render() {\n        return (\n            <Form name=\"normal_login\" className=\"login-form\" onFinish={this.onFinish} style={{marginTop:\"200px\", marginLeft:\"800px\"}}>\n                <Form.Item name=\"email\" rules={[{required: true,message: 'Please input your Email!',},]}>\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"Email\"/>\n                </Form.Item>\n                <Form.Item name=\"password\" rules={[{required: true,message: 'Please input your Password!',},]}>\n                    <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} type=\"password\" placeholder=\"Password\"/>\n                </Form.Item>\n                <Form.Item>\n                    <Button type=\"primary\"  htmlType=\"submit\" className=\"login-form-button\">Register</Button>\n                </Form.Item>\n            </Form>\n  );\n}\n}\n\nexport default LoginComponent;","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/History.js",[],"/Users/feli-v/Desktop/socialMedia/new_front/src/helper/posts.js",[],"/Users/feli-v/Desktop/socialMedia/new_front/src/helper/socket.js",["125","126","127","128","129","130","131","132","133"],"var URL = \"127.0.0.1:8080\"\nvar lockReconnect=false;//if there is a successful connection\nvar timeoutnum = null;\nvar serverTimeoutObj = null;\nvar timeout = 6000;\nvar timeoutObj = null;\nvar times = 0;\nvar heartTimes =0;\nvar ws = null;\nexport {ws}\nexport default {\n        //websocket connection\n        initSocket() {\n            // socket instance\n            const userInfo = localStorage.jwt?JSON.parse(localStorage.jwt):{user:{_id:''}}\n            ws = new WebSocket(`ws://${process.env.REACT_APP_WS_URL}/${userInfo.user._id}`)\n            // listen socket connection\n            ws.onopen = this.open.bind(this)\n            // listen socket error msg\n            ws.onerror = this.error.bind(this)\n            // listen socket msg\n            ws.onmessage = this.getMessage.bind(this)\n            //close listening\n            ws.onclose = this.onclose.bind(this)\n        },\n        open() {\n            times = 0\n            let un = localStorage.getItem('userName')\n            let newKey = localStorage.getItem('key')\n            if(newKey&&un&&localStorage.getItem('token')){\n                let sendMsg = [{name:un,key:newKey}]\n                this.send(JSON.stringify(sendMsg))\n            }\n            this.start()\n\n            console.log('\\n' + \" %c websocket connect successfully \" + '\\n', 'color: white; background: #009999; padding:5px 0; font-size:12px;');\n        },\n        error() {\n            console.log(\"connect error\")\n            this.reconnect()\n        },\n        getMessage(msg) {\n            // lockReconnect = true\n            // clearInterval(serverTimeout)\n            this.reset()\n            console.log(msg);\n\n        },\n        send(data) {\n            ws.send(data)\n            console.log('\\n' + \" %c msg sent \" + '\\n', 'color: white; background: #009999; padding:5px 0; font-size:12px;');\n        },\n        close() {\n            ws.close()\n        },\n        onclose(){\n                console.log(\"socket closed\")\n                heartTimes = 0\n                this.reconnect()\n        },\n        reconnect() {//reconnect\n            if(lockReconnect) {\n                return;\n            }\n            lockReconnect = true;\n            times++;\n            console.log('\\n' + \" %c \"+times+\"reconnect WebSocket... \" + '\\n', 'color: white; background: #009999; padding:5px 0; font-size:12px;');\n            //没连接上会一直重连，设置延迟避免请求过多\n            timeoutnum && clearTimeout(timeoutnum);\n            timeoutnum = setTimeout(()=> {\n                //new connection\n                this.initSocket();\n                lockReconnect = false;\n            },3000);\n        },\n        reset(){//reset\n            //clear time\n            clearTimeout(timeoutObj);\n            clearTimeout(serverTimeoutObj);\n            //restart\n            this.start();\n        },\n        start(){//start\n            if(localStorage.getItem('userName')){\n                timeoutObj && clearTimeout(timeoutObj);\n                serverTimeoutObj && clearTimeout(serverTimeoutObj);\n                timeoutObj = setTimeout(()=>{\n                    //sent to backend，\n                    if (ws.readyState == 1) {//if connection is good\n                        heartTimes++;\n                        ws.send(`${localStorage.getItem('userName')} ${heartTimes}`);\n                    }else{//reconnect\n                        this.reconnect();\n                    }\n                    serverTimeoutObj = setTimeout(()=>{\n                        //close\n                        ws.close();\n                    }, timeout);\n                },timeout)\n            }\n        },\n}\n","/Users/feli-v/Desktop/socialMedia/new_front/src/helper/user.js",[],"/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/MenuComponent.js",["134"],"import React from 'react';\nimport { Menu, Button } from 'antd';\nimport { Link} from 'react-router-dom';\nimport {isAuthenticated} from '../helper';\nimport {AppstoreOutlined,MenuUnfoldOutlined,MenuFoldOutlined,PieChartOutlined,DesktopOutlined,ContainerOutlined,MailOutlined,} from '@ant-design/icons';\nimport EccChat from \"./EccChat\";\n\nconst { SubMenu } = Menu;\nclass MenuComponent extends React.Component {\n    state = {\n        collapsed: false,\n    };\n    toggleCollapsed = () => {\n        this.setState({\n          collapsed: !this.state.collapsed,\n        });\n    };\n    render() {\n        return (\n            <div style={{ width: 256, height:900, backgroundColor: this.state.collapsed?\"white\":\"black\"}}>\n                <Button type=\"primary\" onClick={this.toggleCollapsed} style={{ marginBottom: 16 }}>\n                {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined)}\n                </Button>\n                <Menu defaultSelectedKeys={['recentPosts']} defaultOpenKeys={['posts']} mode=\"inline\" theme=\"dark\" inlineCollapsed={this.state.collapsed}>\n                <Menu.Item key=\"profile\" icon={<PieChartOutlined />}>\n                    <Link to={`/profile/${isAuthenticated().user._id}`}>Profile</Link>\n                </Menu.Item>\n                <Menu.Item key=\"users\" icon={<DesktopOutlined />}>\n                    <Link to=\"/users\">Users</Link>\n                </Menu.Item>\n                <Menu.Item key=\"friends\" icon={<ContainerOutlined />}>\n                    <Link to=\"/find_friends\">Find Friends</Link>\n                </Menu.Item>\n                <SubMenu key=\"posts\" icon={<MailOutlined />} title=\"Posts\">\n                    <Menu.Item key=\"recentPosts\"><Link to=\"/recent_posts\">Recent Posts</Link></Menu.Item>\n                    <Menu.Item key=\"newPost\"><Link to=\"/new_post\">New Post</Link></Menu.Item>\n                </SubMenu>\n                <SubMenu key=\"chatting\" icon={<AppstoreOutlined/>} title=\"Chatting\">\n                    <Menu.Item key=\"no\"><Link to=\"/NoEcc\">No security</Link></Menu.Item>\n                    <Menu.Item key=\"ecc\"><Link to=\"/Ecc\">ECC</Link></Menu.Item>\n                </SubMenu>\n                </Menu>\n            </div>\n        )\n    }\n}\n\nexport default MenuComponent;\n","/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/SinglePostComponent.js",["135","136","137","138"],"import React, {createElement} from 'react';\nimport { Comment, Tooltip, Row, Col, Switch} from 'antd';\nimport { LikeOutlined, LikeFilled } from '@ant-design/icons';\nimport moment from 'moment';\nimport {isAuthenticated} from '../helper';\nimport {remove, like, unlike} from '../helper/posts';\nimport DefaultPost from \"../images/mountains.jpg\";\n\nclass SinglePostComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            like: this.checkLike(this.props.post.likes),\n            likes: this.props.post.likes.length,\n            comments: [],\n            showImg: false\n        }\n    }\n    updateComments = comments => {\n        this.setState({ comments });\n    };\n    onChange = () => {\n        const temp = !this.state.showImg;\n        this.setState({showImg: temp})\n    }\n    likeToggle = () => {\n        let callApi = this.state.like ? unlike : like;\n        const userId = isAuthenticated().user._id;\n        const postId = this.props.post._id;\n        const token = isAuthenticated().token;\n\n        callApi(userId, token, postId).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                this.setState({\n                    like: !this.state.like,\n                    likes: data.likes.length\n                });\n            }\n        });\n    };\n    deletePost = () => {\n        const token = isAuthenticated().token;\n        remove(this.props.post._id, token);\n        window.location.reload();\n    };\n    checkLike = (likes) => {\n        const userId = isAuthenticated().user._id;\n        likes.map((id)=>{\n            if (id === userId) {\n                return true;\n            }\n        })\n        return false;\n    }\n    render(){\n        const {post} = this.props;\n        const actions = [\n            <Tooltip key=\"comment-basic-like\" title=\"Like\">\n              <span onClick={this.likeToggle}>\n                {createElement(this.state.like ? LikeFilled : LikeOutlined)}\n                <span className=\"comment-action\">{this.state.likes}</span>\n              </span>\n            </Tooltip>,\n            <span key=\"comment-basic-reply-to\">Reply to</span>,\n            isAuthenticated().user._id===post.postedBy._id?<span onClick={this.deletePost} key=\"comment-basic-delete\">delete</span>:null,\n          ];\n        return (\n           <div>\n           <Comment actions={actions} author={<a>{post.postedBy.name}</a>} \n                content={\n                    <div>\n                        <p>{post.title}</p>\n                        <br/>\n                        <p>{post.body}</p>   \n                        {this.state.showImg?<img src={`${process.env.REACT_APP_API_URL}/post/photo/${post._id}`} alt={post.title} \n                        onError={i =>(i.target.src = `${DefaultPost}`)} style={{'width':200, 'height':200}}/>:null}   \n                    </div>\n                }\n                datetime={<Tooltip title={moment(post.created).format('YYYY-MM-DD HH:mm:ss')}>\n                    <span>{moment(post.created).fromNow()}</span>\n                    <Switch checked={this.state.showImg} unCheckedChildren=\"more\" onChange={this.onChange} />\n                    </Tooltip>}\n            />\n            \n            </div>\n        )\n    }\n}\n\nexport default SinglePostComponent;","/Users/feli-v/Desktop/socialMedia/new_front/src/helper/friends.js",[],"/Users/feli-v/Desktop/socialMedia/new_front/src/mainPage/LoginComponent.js",["139","140","141"],"import React from 'react';\nimport { Form, Input, Button, Checkbox} from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport {signin, authenticate, register} from '../helper'\nimport './style.css';\n\nclass LoginComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email:\"\",\n            password:\"\",\n            register: false\n        }\n    }\n    onFinish = (values) => {\n        this.setState({\n            email: values.email,\n            password: values.password\n        })\n        const { email, password } = this.state;\n        const user = {email, password};\n        signin(user).then(data => {\n            authenticate(data, () => {\n                \n            });\n        })\n    };\n    renderLogin = () => {\n        return (\n            <Form name=\"normal_login\" className=\"login-form\" onFinish={this.onFinish} style={{marginTop:\"200px\", marginLeft:\"800px\"}}>\n                <Form.Item name=\"email\" rules={[{required: true,message: 'Please input your Email!',},]}>\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"Email\"/>\n                </Form.Item>\n                <Form.Item name=\"password\" rules={[{required: true,message: 'Please input your Password!',},]}>\n                    <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} type=\"password\" placeholder=\"Password\"/>\n                </Form.Item>\n                <Form.Item>\n                    <a className=\"login-form-forgot\" href=\"\">Forgot password</a>\n                </Form.Item>\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">Log in</Button>\n                    <Button type=\"primary\" className=\"login-form-button\" onClick={() => {this.setState({register: true})}}>Register</Button>\n                </Form.Item>\n            </Form>\n        )\n    }\n    renderRegister = () => {\n        return (\n            <Form name=\"normal_login\" className=\"login-form\" onFinish={this.onFinish} style={{marginTop:\"200px\", marginLeft:\"800px\"}}>\n                <Form.Item name=\"email\" rules={[{required: true,message: 'Please input your Email!',},]}>\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"Email\"/>\n                </Form.Item>\n                <Form.Item name=\"password\" rules={[{required: true,message: 'Please input your Password!',},]} hasFeedback>\n                <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} type=\"password\" placeholder=\"Password\"/>\n                </Form.Item>\n                <Form.Item name=\"confirm\" dependencies={['password']} hasFeedback\n                    rules={[{required: true,message: 'Please confirm your password!',},\n                    ({ getFieldValue }) => ({validator(_, value) {\n                        if (!value || getFieldValue('password') === value) {\n                            return Promise.resolve();\n                        }\n                        return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                    },}),]}\n                >\n                    <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} type=\"password\" placeholder=\"Comfirm Password\"/>\n                </Form.Item>\n                <Form.Item>\n                    <Button type=\"primary\"  htmlType=\"submit\" className=\"login-form-button\">Register</Button>\n                </Form.Item>\n            </Form>\n        )\n    }\n    render() {\n        return (\n            this.state.register? this.renderRegister() : this.renderLogin()\n        );\n}\n}\n\nexport default LoginComponent;","/Users/feli-v/Desktop/socialMedia/new_front/src/helper/interest.js",[],"/Users/feli-v/Desktop/socialMedia/new_front/src/helper/index.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":5,"column":8,"nodeType":"148","messageId":"149","endLine":5,"endColumn":22},{"ruleId":"146","severity":1,"message":"150","line":6,"column":43,"nodeType":"148","messageId":"149","endLine":6,"endColumn":49},{"ruleId":"146","severity":1,"message":"151","line":10,"column":8,"nodeType":"148","messageId":"149","endLine":10,"endColumn":27},{"ruleId":"152","severity":1,"message":"153","line":19,"column":26,"nodeType":"154","messageId":"155","endLine":19,"endColumn":28},{"ruleId":"146","severity":1,"message":"156","line":3,"column":17,"nodeType":"148","messageId":"149","endLine":3,"endColumn":20},{"ruleId":"157","severity":1,"message":"158","line":28,"column":27,"nodeType":"159","endLine":28,"endColumn":30},{"ruleId":"152","severity":1,"message":"153","line":18,"column":26,"nodeType":"154","messageId":"155","endLine":18,"endColumn":28},{"ruleId":"146","severity":1,"message":"160","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":14},{"ruleId":"146","severity":1,"message":"161","line":2,"column":16,"nodeType":"148","messageId":"149","endLine":2,"endColumn":26},{"ruleId":"146","severity":1,"message":"162","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":17},{"ruleId":"146","severity":1,"message":"163","line":1,"column":16,"nodeType":"148","messageId":"149","endLine":1,"endColumn":29},{"ruleId":"146","severity":1,"message":"164","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":20},{"ruleId":"146","severity":1,"message":"165","line":3,"column":22,"nodeType":"148","messageId":"149","endLine":3,"endColumn":25},{"ruleId":"146","severity":1,"message":"162","line":2,"column":27,"nodeType":"148","messageId":"149","endLine":2,"endColumn":34},{"ruleId":"146","severity":1,"message":"147","line":5,"column":8,"nodeType":"148","messageId":"149","endLine":5,"endColumn":22},{"ruleId":"146","severity":1,"message":"166","line":6,"column":10,"nodeType":"148","messageId":"149","endLine":6,"endColumn":20},{"ruleId":"146","severity":1,"message":"165","line":7,"column":32,"nodeType":"148","messageId":"149","endLine":7,"endColumn":35},{"ruleId":"146","severity":1,"message":"167","line":8,"column":8,"nodeType":"148","messageId":"149","endLine":8,"endColumn":15},{"ruleId":"146","severity":1,"message":"168","line":2,"column":31,"nodeType":"148","messageId":"149","endLine":2,"endColumn":39},{"ruleId":"146","severity":1,"message":"169","line":4,"column":9,"nodeType":"148","messageId":"149","endLine":4,"endColumn":17},{"ruleId":"146","severity":1,"message":"170","line":1,"column":5,"nodeType":"148","messageId":"149","endLine":1,"endColumn":8},{"ruleId":"171","severity":1,"message":"172","line":11,"column":1,"nodeType":"173","endLine":102,"endColumn":2},{"ruleId":"174","severity":1,"message":"175","line":36,"column":30,"nodeType":"154","messageId":"176","endLine":36,"endColumn":31},{"ruleId":"174","severity":1,"message":"175","line":36,"column":70,"nodeType":"154","messageId":"176","endLine":36,"endColumn":71},{"ruleId":"174","severity":1,"message":"175","line":51,"column":30,"nodeType":"154","messageId":"176","endLine":51,"endColumn":31},{"ruleId":"174","severity":1,"message":"175","line":51,"column":48,"nodeType":"154","messageId":"176","endLine":51,"endColumn":49},{"ruleId":"174","severity":1,"message":"175","line":67,"column":30,"nodeType":"154","messageId":"176","endLine":67,"endColumn":31},{"ruleId":"174","severity":1,"message":"175","line":67,"column":71,"nodeType":"154","messageId":"176","endLine":67,"endColumn":72},{"ruleId":"152","severity":1,"message":"153","line":89,"column":39,"nodeType":"154","messageId":"155","endLine":89,"endColumn":41},{"ruleId":"146","severity":1,"message":"177","line":6,"column":8,"nodeType":"148","messageId":"149","endLine":6,"endColumn":15},{"ruleId":"146","severity":1,"message":"178","line":2,"column":28,"nodeType":"148","messageId":"149","endLine":2,"endColumn":31},{"ruleId":"146","severity":1,"message":"165","line":2,"column":33,"nodeType":"148","messageId":"149","endLine":2,"endColumn":36},{"ruleId":"179","severity":1,"message":"180","line":50,"column":23,"nodeType":"181","messageId":"182","endLine":50,"endColumn":25},{"ruleId":"157","severity":1,"message":"158","line":71,"column":47,"nodeType":"159","endLine":71,"endColumn":50},{"ruleId":"146","severity":1,"message":"168","line":2,"column":31,"nodeType":"148","messageId":"149","endLine":2,"endColumn":39},{"ruleId":"146","severity":1,"message":"169","line":4,"column":31,"nodeType":"148","messageId":"149","endLine":4,"endColumn":39},{"ruleId":"157","severity":1,"message":"183","line":39,"column":21,"nodeType":"159","endLine":39,"endColumn":62},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'DefaultProfile' is defined but never used.","Identifier","unusedVar","'Avatar' is defined but never used.","'SinglePostComponent' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Tag' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","'withRouter' is defined but never used.","'signout' is defined but never used.","'createElement' is defined but never used.","'Pagination' is defined but never used.","'Col' is defined but never used.","'listByUser' is defined but never used.","'history' is defined but never used.","'Checkbox' is defined but never used.","'register' is defined but never used.","'URL' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'EccChat' is defined but never used.","'Row' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]